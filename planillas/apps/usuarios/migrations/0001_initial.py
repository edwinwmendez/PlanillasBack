# Generated by Django 5.0.6 on 2024-06-30 17:07

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('configuracion', '0001_initial'),
        ('trabajadores', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin_sistema', 'Administrador del Sistema'), ('admin_ugel', 'Administrador UGEL'), ('tecnico_procesos', 'Técnico de Procesos'), ('tecnico_planillas', 'Técnico de Planillas'), ('trabajador', 'Trabajador')], default='trabajador', max_length=20, verbose_name='Rol')),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('groups', models.ManyToManyField(blank=True, help_text='Los grupos a los que pertenece este usuario. Un usuario obtendrá todos los permisos concedidos a cada uno de sus grupos.', related_name='custom_user_set', to='auth.group', verbose_name='grupos')),
                ('ugel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='configuracion.ugel', verbose_name='UGEL')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Permisos específicos para este usuario.', related_name='custom_user_set', to='auth.permission', verbose_name='permisos de usuario')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Persona',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_documento', models.CharField(db_index=True, max_length=12, unique=True, verbose_name='Número de Documento')),
                ('paterno', models.CharField(blank=True, max_length=45, verbose_name='Apellido Paterno')),
                ('materno', models.CharField(blank=True, max_length=45, verbose_name='Apellido Materno')),
                ('nombres', models.CharField(blank=True, max_length=45, verbose_name='Nombres')),
                ('fecha_nacimiento', models.DateField(blank=True, null=True, verbose_name='Fecha de Nacimiento')),
                ('direccion', models.CharField(blank=True, max_length=100, verbose_name='Dirección')),
                ('email', models.EmailField(blank=True, max_length=45, verbose_name='Email')),
                ('telefono', models.CharField(blank=True, max_length=9, verbose_name='Teléfono')),
                ('estado_civil', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configuracion.estadocivil', verbose_name='Estado Civil')),
                ('sexo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configuracion.sexo', verbose_name='Sexo')),
                ('tipo_documento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configuracion.tipodocumento', verbose_name='Tipo de Documento')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='persona', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Persona',
                'verbose_name_plural': 'Personas',
                'db_table': 'persona',
                'ordering': ['paterno', 'materno', 'nombres'],
            },
        ),
        migrations.CreateModel(
            name='Beneficiario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relacion_trabajador', models.CharField(blank=True, max_length=45, verbose_name='Relación del Trabajador')),
                ('documento_descuento', models.CharField(blank=True, max_length=45, verbose_name='Documento de Descuento')),
                ('numero_cuenta', models.CharField(blank=True, max_length=20, verbose_name='Número de Cuenta')),
                ('descuento_fijo', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Descuento Fijo')),
                ('porcentaje_descuento', models.IntegerField(blank=True, null=True, verbose_name='Porcentaje de Descuento')),
                ('fecha_inicio', models.DateField(blank=True, null=True, verbose_name='Fecha de Inicio')),
                ('fecha_fin', models.DateField(blank=True, null=True, verbose_name='Fecha de Fin')),
                ('estado', models.BooleanField(blank=True, default=True, null=True, verbose_name='Estado')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('banco', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='configuracion.banco', verbose_name='Banco')),
                ('tipo_beneficiario', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='configuracion.tipobeneficiario', verbose_name='Tipo de Beneficiario')),
                ('tipo_descuento', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='configuracion.tipodescuento', verbose_name='Tipo de Descuento')),
                ('trabajador', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='beneficiarios', to='trabajadores.trabajador', verbose_name='Empleado')),
                ('persona', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usuarios.persona', verbose_name='Persona')),
            ],
            options={
                'verbose_name': 'Beneficiario',
                'verbose_name_plural': 'Beneficiarios',
                'db_table': 'beneficiario',
                'ordering': ['id'],
            },
        ),
    ]
